@model System.Data.DataTable
@functions{
    private string LogType { get { return Context.Request.Query["LogType"]; } }
    private string GetLogStr()
    {
        switch (LogType)
        {
            case "safe":
                return "安全日志";
            case "fileup":
                return "上传日志";
            case "exception":
                return "异常日志";
            case "labelex":
                return "标签异常日志";
            case "alogin":
                return "管理登录日志";
            default:
                return "未知日志";
        }
    }
    }
@section head{<title>日志查看</title> }
@section content{
	  @Call.SetBread(new Bread[] {
		new Bread("{admin}"),
        new Bread() {url=Context.Request.RawUrl(), text=GetLogStr(),addon="" }})
	<div class="list_choice">
        <table class="table table-bordered table-striped">
            <thead><tr><td>文件名</td><td>起始时间</td><td>结束时间</td><td>日志大小</td><td>操作</td></tr></thead>
       
     @foreach (DataRow dr in Model.Rows)
     {
         string fname = HttpUtility.UrlEncode(DataConverter.CStr(dr["name"]));
         <tr>
             <td><a href="javascript:;" onclick="ShowComDiag('TxtLogContent?LogType=@LogType&fname=@(fname)','日志内容');">@dr["Name"]</a></td>
             <td>@dr["CreateTime"]</td>
             <td>@dr["LastWriteTime"]</td>
             <td>@dr["ExSize"]</td>
             <td>
                 <a href="javascript:;" onclick="ShowComDiag('TxtLogContent?LogType=@LogType&fname=@(fname)', '日志内容');"><i class="zi zi_eye"></i> 浏览</a>
                 <a href="TxtLog_Down?LogType=@LogType&fname=@(fname)"><i class="zi zi_download"></i> 下载 </a>
             </td>
         </tr>
     }
     </table>
	</div>

 }
@section script{ 


}
