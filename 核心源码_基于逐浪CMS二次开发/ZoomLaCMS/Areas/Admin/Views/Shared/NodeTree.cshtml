@using System.Data
@using ZoomLa.BLL.User
@using ZoomLa.BLL.Content
@model ZoomLaCMS.Control.C_Model
@functions{
    B_Spec specBll = new B_Spec();
    B_Node nodeBll = new B_Node();
    string LinkUrl = "";
    string hasChild { get; set; }
    string noChild { get; set; }
    string nodeHtml { get; set; }
    public string GetLI(DataTable dt, int pid = 0)
    {
        string result = "";
        DataRow[] dr = dt.Select("ParentID='" + pid + "'");
        for (int i = 0; i < dr.Length; i++)
        {
            result += "<li>";
            if (dt.Select("ParentID='" + Convert.ToInt32(dr[i]["NodeID"]) + "'").Length > 0)
            {
                result += string.Format(hasChild, dr[i]["NodeID"], dr[i]["NodeName"]);
                result += "<ul class='tvNav tvNav_ul' style='display:none;'>" + GetLI(dt, Convert.ToInt32(dr[i]["NodeID"])) + "</ul>";
            }
            else
            {
                result += string.Format(noChild, dr[i]["NodeID"], dr[i]["NodeName"]);
            }
            result += "</li>";
        }
        return result;
    }
    protected DataTable BindNode()
    {
        DataTable dt = null;
        if (Model.mode == "product")
        {
            LinkUrl = @Call.PathAdmin("Product/ProductManage?NodeID={0}");
            dt = nodeBll.GetAllShopNode(0);
        }
        else if (Model.mode == "product_recycle")
        {
            LinkUrl = @Call.PathAdmin("Product/ProductRecycle?NodeID={0}");
            dt = nodeBll.GetAllShopNode(0);
        }
        else if (Model.mode == "special")
        {
            dt = specBll.SelPage(1, 1000, new Com_Filter() { storeId = 0 }).dt;
            specBll.ChangeColumnToNode(dt);
            LinkUrl = @Call.PathAdmin("Content/ContentManage?Special={0}");
        }
        else if (Model.mode == "product_special")
        {
            dt = specBll.SelPage(1, 1000, new Com_Filter() { storeId = 1 }).dt;
            specBll.ChangeColumnToNode(dt);
            LinkUrl = @Call.PathAdmin("Product/ProductManage?Special={0}");
        }
        else if (Model.mode == "page")
        {

        }
        else if (Model.mode == "content_recycle")
        {
            dt = nodeBll.SelByPid(0, true);
            dt.DefaultView.RowFilter = "NodeType IN (0,1)";
            dt = dt.DefaultView.ToTable();
            LinkUrl = @Call.PathAdmin("Content/ContentRecycle?NodeID={0}");
        }
        else
        {
            dt = nodeBll.SelByPid(0, true);
            //剃除链接类型
            dt.DefaultView.RowFilter = "NodeType IN (0,1)";
            dt = dt.DefaultView.ToTable();
            LinkUrl = @Call.PathAdmin("Content/ContentManage?NodeID={0}");
        }
        foreach (DataRow dr in dt.Rows)
        {
            if (dr["NodeName"].ToString().Length > 30)
            {
                dr["NodeName"] = dr["NodeName"].ToString().Substring(0, 30) + "..";
            }
        }
        return dt;
    }
}
@{
    DataTable dt= BindNode();
    hasChild = "<a href='javascript:;' onclick=\"ShowMain('','" + LinkUrl + "');\" target='main_right' id='a{0}' class='list1'><span class='list_span'>{1}</span> <i class='zi zi_forDown' title='浏览父节点'></i></a>";
    noChild = " <a href='javascript:;' onclick=\"NodeTree.activeSelf(this);ShowMain('','" + LinkUrl + "');\">{1}</a>";
    nodeHtml = "<ul class='tvNav'><li><a class='list1' id='a0' href='javascript:;' onclick=\"ShowMain('','" + LinkUrl + "');\"><span class='list_span'>全部内容</span> <i class='zi zi_thlarge'></i></a>" + GetLI(dt) + "</li></ul>";
}
<div class="menu_tit pl-2"><i class="zi zi_forDown"></i> 信息管理</div>
<div id="nodeNav">
    <div class="input-group">
        <input type="text" id="keyWord" class="form-control ascx_key" onkeydown="return ASCX.OnEnterSearch('@(LinkUrl.Split('?')[0]+"?keyWord=")',this);" />
        <div class="input-group-append">
            <button class="input-group-text" type="button" onclick="ASCX.Search('@(LinkUrl.Split('?')[0]+"?keyWord=")','keyWord');"><i class="zi zi_search"></i></button>
        </div>
    </div>
    <div class="tvNavDiv">
        <div class="NodeTree_left_ul">
            @Html.Raw(nodeHtml)
        </div>
    </div>
</div>