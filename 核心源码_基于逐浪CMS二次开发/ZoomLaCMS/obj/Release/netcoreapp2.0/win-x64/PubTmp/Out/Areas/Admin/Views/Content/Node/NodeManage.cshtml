@using System.Data
@using ZoomLa.BLL
@using ZoomLa.Model
@using ZoomLa.BLL.Content
@using ZoomLa.Model.Content
@using Newtonsoft.Json
@{
    //Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
    string nodeDir = CustomerPageAction.customPath2 + "Content/Node/";
    B_Node nodeBll = new B_Node();
    DataTable dt = nodeBll.SelForShowAll(0, true);
    DataRow dr = dt.NewRow();//根节点
    dr["NodeID"] = 0;
    dr["NodeType"] = (int)NodeEnum.Root;
    dr["NodeName"] = Call.SiteName;
    dr["NodeDir"] = "root";
    dr["Depth"] = 0;
    dr["ItemCount"] = dt.Compute("SUM(ItemCount)", "ParentID=0");
    dr["ChildCount"] = dt.Rows.Count;
    dr["isShow"] = 1;
    dr["isOpen"] = 1;
    dt.Rows.InsertAt(dr, 0);

    int showFlag = ZoomLa.Common.DataConverter.CStr(Context.Request.Query["action"]).Equals("showall") ? 1 : 0;
    for (int i = 1; i < dt.Rows.Count; i++)
    {
        dt.Rows[i]["isShow"] = showFlag;
        dt.Rows[i]["isOpen"] = showFlag;
    }
}
@section head{<title>节点管理</title>}
@section content{
    @Call.SetBread(new Bread[] {
new Bread("/{manage}/Main","工作台"),
new Bread("/{manage}/Config/SiteInfo","系统设置"),
new Bread(){
url="NodeManage",
text="节点管理",
addon="<li class='breadcrumb-item'><a class='dropdown-toggle' data-toggle='dropdown' href='#' role='button' aria-haspopup='true' aria-expanded='false'>便捷操作</a><div class='dropdown-menu'><a class='dropdown-item' href='NodeManage?action=showall'>+展开所有节点</a>"
+"<a class='dropdown-item' href=\'NodeManage\' >-收缩所有节点</a>"
+"<a class='dropdown-item' href=\'javascript:void(0)\' onclick=\'emptynode()\'>x删除所有节点</a>"
+"<a class='dropdown-item' href=\""+CustomerPageAction.customPath2+"Config/EmptyData\">*初始全站数据</a></div></li>"
}})

    <div class="container-fluid pr-0 sysNodemanage" id="app" onselect="return false;">
        <div class="row sysRow table-responsive-md">
            <table class="table table-striped table-bordered nodelist_div list_choice">
                <tr class="gridtitle text-center">
                    <th scope="row" class="w1rem"><input type="checkbox" id="chkAll" /></th>
                    <td class="td _s text-center"><strong>ID</strong></td>
                    <td><strong>节点名称</strong></td>
                    <td class="td_m"><strong>节点类型</strong></td>
                    <td class="td_m"><strong>文章数(总计)</strong></td>
                    <td><strong>创建时间</strong></td>
                    <td><strong>操作</strong></td>
                </tr>
                <tr v-for="item in nodes" v-show="isShow(item)" @@dblclick="toggleChild(item)">
                    <td><input type="checkbox" value="item.NodeID" /></td>
                    <td>{{item.NodeID}}</td>
                    <td>
                        <span v-html="showNodeDepth(item)"></span>
                        <span v-html="showNodeIcon(item)"></span>
                        <span v-html="showNodeName(item)"></span>
                        <span v-if="item.ChildCount>0&&item.NodeID!=0">
                            <a href="javascript:;" v-on:click="showChild(item);" v-show="item.isOpen==0" title="显示子栏目"><i style="font-size:22px;" class="fa fa-chevron-circle-right"></i></a>
                            <a href="javascript:;" v-on:click="hideChild(item);" v-show="item.isOpen==1" title="隐藏子栏目"><i style="font-size:22px;" class="fa fa-chevron-circle-down"></i></a>
                        </span>
                    </td>
                    <td>{{showNodeType(item)}}</td>
                    <td>{{item.ItemCount}}</td>
                    <td>{{item.CDate|date}}</td>
                    <td v-html="showNodeBtns(item)"></td>
                </tr>
            </table>
        </div>
    </div>
}
@section script{
    <script src="/js/Controls/ZL_Array.js"></script>
    <script src="/js/Controls/ZL_Dialog.js"></script>
    <script src="/dist/vue/vue.js"></script>
    <script>
        var conLinkUrl = "/AdminMVC/Content/ContentManage?NodeID=";
        //日期过滤
        Vue.filter("date",function(value){
            if(value&&value.replace)
            {
                value=value.replace("T"," ");
                value=value.substr(0,value.length-3);
            }
            return value;
        })
        var app = new Vue({
            el: "#app",
            methods: {
                showNodeType: function (item) {
                    switch (parseInt(item.NodeType)) {
                        case 0:
                            return "根节点";
                        case 1:
                            return "栏目节点";
                        case 2:
                            return "单页节点";
                        case 3:
                            return "外部链接";
                        default:
                            return "未知栏目类型";
                    }
                },
                showNodeDepth:function(item){
                    var outstr = "";
                    var Depth = parseInt(item.Depth);
                    if (Depth > 0) {
                        for (i = 1; i <= Depth - 1; i++) {
                            outstr = outstr + "<a href='" + conLinkUrl + item.NodeID + "'><img src='/Images/TreeLineImages/tree_line4.gif' border='0' width='19' height='20' title='浏览内容管理' /></a>";
                        }
                        outstr = outstr + "<a href='" + conLinkUrl + item.NodeID + "'><img src='/Images/TreeLineImages/t.gif' border='0' title='浏览内容管理' /></a>";
                    }
                    return outstr;
                },
                showNodeIcon:function(item){
                    var outstr = "";
                    var nodeDir = "[" + item.NodeDir + "]";
                    var nodetype = item.NodeType+"";
                    var NodeName = item.NodeName;
                    var NodeID = item.NodeID;
                    var childCount = parseInt(item.ChildCount);
                    //--------------
                    switch (nodetype)
                    {
                        case "@((int)NodeEnum.Root)":
                        case "@((int)NodeEnum.Node)"://普通栏目节点与根节点
                            if (childCount > 0)//如果有子节点
                            {
                                outstr =  '<a href="/Admin/Content/ContentManage?NodeID='+NodeID+'"><span data-type="icon" class="'+(item.isOpen==1?"fa fa-folder-open":"fa fa-folder")+'" title="浏览内容管理"></span></a>';
                            }
                            else {
                                outstr =  "<a href='/Admin/Content/ContentManage?NodeID=" + NodeID + "'><span class='fa fa-file' title='浏览内容管理'></span></a>";
                            }
                            break;
                        case "@((int)NodeEnum.SPage)"://单页
                            outstr ="<a href='" + conLinkUrl + NodeID + "'><span class='fa fa-file' title='浏览内容管理'></span></a>";
                            break;
                        case "@((int)NodeEnum.OuterLink)"://外部链接
                            outstr ="<a href='" + conLinkUrl + NodeID + "'><i class='fa fa-chain' title='浏览内容管理'></i></a>";
                            break;
                    }
                    return outstr;
                },
                showNodeName: function (item) {
                    var outstr = "";
                    var nodeDir = "[" + item.NodeDir + "]";
                    var nodetype = item.NodeType+"";
                    var NodeName = item.NodeName;
                    var NodeID = item.NodeID;
                    //--------------
                    switch (nodetype)
                    {
                        case "@((int)NodeEnum.Root)":
                        case "@((int)NodeEnum.Node)"://普通栏目节点与根节点
                            if (NodeID == 0) {
                                outstr =  "<span>" + NodeName + nodeDir + "</span>";
                            }
                            else {
                                outstr =  "<span><a href='@(nodeDir)NodeAdd?ID=" + NodeID + "'>" + NodeName + nodeDir + "</a></span>";
                            }
                            break;
                        case "@((int)NodeEnum.SPage)"://单页
                            outstr = "<span><a href='@(nodeDir)SPageAdd?ID=" + NodeID + "'>" + NodeName + nodeDir + "</a></span>";
                            break;
                        case "@((int)NodeEnum.OuterLink)"://外部链接
                            outstr = "<span><a href='@(nodeDir)OutLinkAdd?ID=" + NodeID + "'>" + NodeName + nodeDir + "</a></span>";
                            break;
                    }
                    return outstr;
                },
                //显示操作按钮
                showNodeBtns: function (item) {
                    var NodeID = parseInt(item.NodeID);
                    var NodeType = item.NodeType+"";
                    var ChildCount = parseInt(item.ChildCount);
                    var outstr = "", viewHtml = "";
                    function Link_GetUrl(nid, page) {
                        return "/Class_" + nid + "/" + page + "";
                    }
                    function Link_ShowHtml(indexUrl, nid, views) {
                        if (ZL_Regex.isEmpty(indexUrl) && views.length < 1) { return ""; }
                        var html = "<div class=\"btn-group\">";
                        if (!ZL_Regex.isEmpty(indexUrl)) {
                            html += "<button type='button' onclick=\"window.open('" + Link_GetUrl(nid, "Default") + "');\"  class=\"btn btn-light btn-sm\" title='浏览首页'><i class='fa fa-globe'></i> 浏览</button>";
                        }
                        if (views.length > 0) {
                            html += "<button type=\"button\" class=\"btn btn-light btn-sm dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">";
                            html += "<span class=\"sr-only\">Toggle Dropdown</span>";
                            html += "</button>";
                            html += "<div class=\"dropdown-menu\">";
                            for (var i = 0; i < views.length; i++) {
                                var name = views[i].split('|')[0];
                                var page = views[i].split('|')[1];
                                html += "<a class=\"dropdown-item\" target=\"_blank\" href=\""+Link_GetUrl(nid, page)+"\">"+name+"</a>";
                            }
                            html += "</div>";
                        }
                        html += "</div>";
                        return html;
                    }

                    if (NodeType == "@((int)NodeEnum.Node)" || NodeType == "@((int)NodeEnum.SPage)")
                    {
                        var tempcount = 0;//栏目数量
                        var views = new Array();
                        if (!ZL_Regex.isEmpty(item.ListTemplateFile)) { views.push("列表|NodePage"); tempcount++; }
                        if (!ZL_Regex.isEmpty(item.LastinfoTemplate)) { views.push("最新|NodeNews"); tempcount++; }
                        if (!ZL_Regex.isEmpty(item.HotinfoTemplate)) { views.push("热门|NodeHot"); tempcount++; }
                        if (!ZL_Regex.isEmpty(item.ProposeTemplate)) { views.push("推荐|NodeElite"); tempcount++; }
                        viewHtml = Link_ShowHtml(item.IndexTemplate, NodeID, views);
                    }
                    //-------------------------------------------------
                    var addLink = "<a href='@(nodeDir)NodeAdd?ParentID=" + NodeID + "' class='option_style'><i class='fa fa-plus' title='添加'></i>节点</a>";
                    var delLink = "<a href='javascript:;' onclick=\"app.del('" + NodeID + "')\" class='option_style'><i class='fa fa-trash-o' title='删除'></i>删除</a>";
                    var createLink = "<a href='javascript:;' onclick='createHtml(" + NodeID + ");' title='生成静态页' class='option_style'><i class='fa fa-play'></i>生成</a>";
                    switch (NodeType) {
                        case "@((int)NodeEnum.Root)":
                            outstr = "<a href='@(CustomerPageAction.customPath2)Config/SiteInfo' class='option_style'><i class='fa fa-pencil'></i>修改</a>";
                            outstr += addLink + " <a href='@(nodeDir)SPageAdd?ParentID=" + NodeID + "' class='option_style'><i class='fa fa-plus' title='添加'></i>单页</a> <a href='OutLinkAdd?ParentID=" + NodeID + "' class='option_style'><i class='fa fa-plus' title='链接'></i>链接</a> <a href='javascript:;' data-toggle=\"modal\" data-target=\"#addinfo_div\" onclick='open_page(0,1)' class='option_style'><i class='fa fa-list-ol' title='排序'></i>排序</a>";
                            createLink = "";
                            break;
                        case "@((int)NodeEnum.Node)":
                            outstr = "<a href='@(nodeDir)NodeAdd?ID=" + NodeID + "' class='option_style' ><i class='fa fa-pencil'></i>修改</a> " + addLink + " <a href='@(nodeDir)SPageAdd?ParentID=" + NodeID + "' class='option_style'><i class='fa fa-plus' title='添加'></i>单页</a> <a href='@(nodeDir)OutLinkAdd?ParentID=" + NodeID + "' class='option_style'><i class='fa fa-plus' title='链接'></i>链接</a> ";
                            if (ChildCount > 0) {
                                outstr = outstr + " <a href='javascript:void(0)' onclick='open_page(" + NodeID + ",2)' class='option_style'><i class='fa fa-list-ol' title='排序'></i>排序</a>";
                            }
                            outstr += delLink;
                            break;
                        case "@((int)NodeEnum.SPage)":
                            outstr = "<a href='@(nodeDir)SPageAdd?ID=" + NodeID + "' class='option_style'><i class='fa fa-pencil'></i>修改</a>" + delLink;
                            break;
                        case "@((int)NodeEnum.OuterLink)":
                            outstr = "<a href='@(nodeDir)OutLinkAdd?ID=" + NodeID + "' class='option_style'><i class='fa fa-pencil' title='修改'></i>修改</a>" + delLink;
                            break;

                    }
                    outstr += viewHtml;
                    outstr += createLink;
                    return outstr;
                },
                //双击显示子元素
                toggleChild:function(item){
                    if(item.ChildCount<1){}
                    if(item.isOpen==1){this.hideChild(item);}
                    else{this.showChild(item);}
                },
                //显示子元素
                showChild: function (item) {
                    var ref=this;
                    var nodes=ref.getByPid(item.NodeID);
                    for (var i = 0; i < nodes.length; i++) {
                        nodes[i].isShow=1;
                    }
                    item.isOpen=1;
                },
                hideChild:function(item){
                    var ref=this;
                    item.isOpen=0;
                    var hideByPid=function(pid){
                        var nodes=ref.getByPid(pid);
                        if(nodes==null||nodes.length<1){}
                        for (var i = 0; i < nodes.length; i++) {
                            hideByPid(nodes[i].NodeID);
                            nodes[i].isShow=0;
                            nodes[i].isOpen=0;
                        }
                    }
                    hideByPid(item.NodeID);

                },
                del: function (nid) {
                    var ref = this;
                    if (!confirm("确定要删除该节点吗")) { return false; }
                    //-----------------------------------
                    for (var i = 0; i < ref.nodes.length; i++) {
                        if (ref.nodes[i].NodeID == nid) {
                            ref.nodes.splice(i, 1);
                            mvcpage.del({ url: 'Node_API?action=del', ids: nid });
                            break;
                        }
                    }
                    return true;
                },
                //是否允许显示该元素
                isShow:function(item){
                    var ref=this;
                    if(Convert.ToInt(item.ParentID,0)==0)
                    {
                        return true;
                    }
                    else
                    {
                        return item.isShow==1?true:false;
                    }
                },
                getByNodeId:function(nid){
                    var ref=this;
                    for (var i = 0; i < ref.nodes.length; i++) {
                        if(ref.nodes[i].NodeID==nid){return ref.nodes[i];}
                    }
                    return null;
                },
                //根据父节点获取节点列表
                getByPid:function(pid){
                    var ref=this;
                    var list=[];
                    for (var i = 0; i < ref.nodes.length; i++) {
                        if(ref.nodes[i].ParentID==pid){list.push(ref.nodes[i]);}
                    }
                    return list;
                },
            },
            data: {
                nodes: @Html.Raw(JsonConvert.SerializeObject(dt)),

            }

        });
        //------------------------------
        //为了Json序列化，如此处理
        var data = ["NodeAdd?ID=", "SetNodeOrder?ParentID=", "SetNodeOrder?ParentID=", 'SPageAdd?ID=', "OutLinkAdd?ID="];
        function isInt(e) { var t = /^\d+(\d+)?$/gi; return t.exec(e) ? !0 : !1 }
        var nodediag = new ZL_Dialog();
        function open_page(NodeID, strURL) {
            nodediag.maxbtn = false;
            nodediag.title = "";
            if (isInt(strURL)) {
                strURL = data[strURL];
            }
            nodediag.url = "@nodeDir"+strURL + NodeID;
            nodediag.ShowModal();
        }
        function editnode(NodeID) {
            var answer = confirm("该栏目未绑定模板，是否立即绑定");
            if (answer == false) {
                return false;
            }
            else {
                open_page(NodeID, "@(nodeDir)EditNode?NodeID=");
            }
        }
        function emptynode() {
            var answer = confirm("此操作将删除现有站点数据，确认？");
            if (answer == false) {
                return false;
            }
            else {
                window.location.href = "NodeManage?action=del";
            }
        }
        function delConfirm() {
            return confirm("你确定要删除该节点吗");
        }
        function nodechk(obj) {
            $("input[name='idchk']").each(function () {
                this.checked = obj.checked;
            })
        }
        function createHtml(nid) {
            var path = "@CustomerPageAction.customPath2";
            var url = path + "Content/CreateHtmlContent?CType=node&NodeID=" + nid;
            comdiag.reload = true;
            ShowComDiag(url, "生成发布");
        }
        $("ul.dropdown-menu li").addClass("dropdown-item");
    </script>
}