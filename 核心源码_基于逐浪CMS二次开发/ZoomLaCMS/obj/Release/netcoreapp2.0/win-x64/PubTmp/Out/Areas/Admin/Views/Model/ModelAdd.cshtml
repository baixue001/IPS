@using ZoomLa.BLL.Content
@model ZoomLa.Model.Content.M_ModelInfo
@functions{
    B_Model bll = new B_Model();

}
@{
    int ModelType = ViewBag.ModelType;
        }
        @section head{
<link type="text/css" href="/dist/css/bootstrap-switch.min.css" rel="stylesheet" />
<title>模型信息</title>
}
        @section content{
            @Call.SetBread(new Bread[] {
            new Bread("/{manage}/I/Main","工作台"),
            new Bread("ModelManage?ModelType="+ModelType,"模型管理"),
            new Bread(){url=Context.Request.RawUrl(), text="模型管理"}
    })
<div class="container-fluid pr-0">
<div class="list_choice">
    <form method="post" action="@MVCHelper.GetAction("ModelAdd_Submit",Context.Request)">
            <table class="table table-striped table-bordered sys_table">
	<tr>
		<th scope="col" class="w12rem_lg" >
			<strong>模型名称</strong>
		</th>
		<td scope="col">

            <input type="text" ID="TxtModelName" name="TxtModelName" class="form-control max20rem required" onchange="checkTbName()" MaxLength="50" onkeyup="Getpy('TxtModelName','TxtTableName')" value="@Model.ModelName"/>
        </td>
	</tr>
	<tr>
		<th>
			<strong>创建的数据表名</strong>
		</th>
		<td>
			<div class="input-group mb-3">
			<div class="input-group-prepend">
                <span class="input-group-text">
                    @bll.GetTablePrefix(Model.ModelType)
                </span>
		  </div>
			
			<input type="text" name="TxtTableName" ID="TxtTableName" class="form-control max20rem" onchange="checkTbName()" value="@Model.TableName"/>
			</div>
			
            <span id="checkname_span" style="color:red;display:none;">表名重复!</span>
		</td>
	</tr>
	<tr>
		<th>
			<strong>项目名称 <span class="text-danger">*</span></strong>
		</th>
        <td>
            <div class="input-group">
                <input type="text" ID="TxtItemName" name="TxtItemName" class="form-control max20rem required" MaxLength="20"  value="@Model.ItemName"/>
                <div id="ItemTd" class="input-group-append"></div>
            </div>
        </td>
	</tr>
	<tr>
		<th>
			<strong>项目单位 <span class="text-danger">*</span></strong>
		</th>
        <td>
            <div class="input-group">
                <input type="text" ID="TxtItemUnit" name="TxtItemUnit" Text="篇" class="form-control max20rem" MaxLength="20" value="@Model.ItemUnit"/>
                <div id="Unitd" class="input-group-append"></div>
            </div>
        </td>
	</tr>
   <tr>
		<th>
			<strong>是否复制</strong>
			  <br />
			  确定模型是否可以复制
        </th>
		<td>
           <input type="checkbox" id="rblCopy" class="switchChk"  checked="checked" />
		</td>
	</tr>
    <tr>
		<th>
			<strong>是否批量添加</strong>
			  <br />
			  确定用户中心是否可以批量添加
        </th>
		<td>
            <input type="checkbox" id="rblIslotsize" class="switchChk"/>
		</td>
	</tr>
	<tr>
		<th>
			<strong>项目图标</strong>
		</th>
		<td>
			<div class="input-group">
				<input type="text" ID="ItemIcon_T" name="ItemIcon_T" class="form-control max20rem" value="@Model.ItemIcon"/>
				<div class="input-group-append">
				   <a href="javascript:;" onclick="ShowComDiag('/common/icon2.html','选择图标');" class="btn btn-info sfile_selbtn rounded-right">
				   <i class="fa fa-picture-o" aria-hidden="true"></i>
				   </a>
				</div>
				
				<div class="ml-2">
			   <a href="javascript:;" class="btn btn-outline-info rounded-right">
			   <i id="ico_show" class="fa fa-circle-thin" aria-hidden="true"></i>
			   </a>
				</div>
			</div>
			
		</td>
	</tr>
	<tr>
		<th>
			<strong>模型描述</strong>
		</th>
		<td>
			<textarea type="text" ID="TxtDescription" name="TxtDescription" class="form-control m50rem_50" rows="5">@Model.Description</textarea>
		</td>
	</tr>
	<tr>
		<td></td>
		<td colspan="2" class="text-left panel_footers">
			<input type="submit"  value="保存信息" OnClientClick="return CheckData();" class="btn btn-info" id="EBtnSubmit"/>
			&nbsp;&nbsp;
            <a href="ModelManage?ModelType=@Model.ModelType" class="btn btn-outline-info">返回列表</a>
		</td>
	</tr>
</table>
            </form>
    <div id="icons" style="display:none"></div>
</div>
</div>
 }
@section script{
<script src="/dist/js/bootstrap-switch.js"></script>
<script src="/js/chinese.js"></script>
<script src="/js/Controls/ZL_Dialog.js"></script>
<script>
    $("body").ready(function () {
            SelUnit();
            SelItem();
        });
        function CheckData(){
            var patt = /^[a-zA-Z0-9_\-]+$/
            if (!patt.test($("#TxtTableName").val())) {
                alert('数据表名只能由字母、下划线或数字组成！');
        $("#TxtTableName").focus();
                return false;
            }
            return true;
        }
        function Getpy(ontxt, id) {
            if ('@Model.ModelID' == "0") {
                var str = document.getElementById(ontxt).value.trim();
                if (str == "") {
                    document.getElementById(id).value = "";
                    
                }
                var arrRslt = makePy(str);
                if (arrRslt.length > 0) {
                    document.getElementById(id).value = arrRslt.toString().toLowerCase();
                    if (document.getElementById(id).value.indexOf(',') > -1) {//判断栏目名称有多音字后栏目标识名“，”并去掉逗号后面的数据
                        var str = document.getElementById(id).value;
                        document.getElementById(id).value = str.split(',', 1);
                    }
                }
            }
        }
        function SelUnit(){
            var units= "篇,个,张,件";
            var array=units.split(",");
            for (var i = 0; i < array.length; i++) {
                var str="<button type='button' class='btn btn-outline-info'>"+array[i]+"</button>"
        $("#Unitd").append(str);
            }
    $("#Unitd").find("button").click(function(){
        $("#TxtItemUnit").val($(this).text());
            });

        }
        function SelItem(){
            var units= "文章,软件,图片,商品";
            var array=units.split(",");
            for (var i = 0; i < array.length; i++) {
                var str="<button type='button' class='btn btn-outline-info'>"+array[i]+"</button>"
        $("#ItemTd").append(str);
            }
    $("#ItemTd").find("button").click(function(){
        $("#TxtItemName").val($(this).text());
            });

        }
        //检查表名是否重复
        function checkTbName(){
            var tbname=$("#TxtTableName").val();
    //checkname_span
    $.ajax({
                type:'POST',
        data:{action:'checkname',tbname:tbname},
        success:function(data){
                    if (data==-1) {
                $("#checkname_span").show();
                $("#EBtnSubmit").attr("disabled","disabled");
                    }else{
                $("#checkname_span").hide();
                $("#EBtnSubmit").removeAttr("disabled");
                    }
                }
            });
        }
        var zlicon = { text: "" };
        zlicon.back = function (icon) {
            if (!icon) {  }
    $(zlicon.text).val(icon);
    $(zlicon.text + "_icon").attr("class", icon);
            CloseComDiag();
            console.log(icon);
	//$("#ico_show").toggleClass(icon);
	$("#ico_show").attr("class", icon);
        }
        zlicon.init = function (text) {
            zlicon.text = text;
            zlicon.back($(text).val());

        }
        zlicon.init("#ItemIcon_T");


</script>

 }