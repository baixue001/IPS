@using System.Data
@using System.Web
@using ZoomLa.Safe
@using ZoomLa.Common
@using ZoomLa.Components
@using ZoomLa.BLL.Helper
@model ZoomLa.SQLDAL.SQL.PageSetting
@functions{
    public string TemplateDir
    {
        get
        {
            return SiteConfig.SiteOption.CssDir.TrimEnd(',') + "/";
        }
    }
    public string CurDir { get { return SafeC.PathDeal(DataConverter.CStr(Context.Request.Query["dir"])); } }
    public string PPathDir { get { return function.VToP(SafeC.PathDeal((TemplateDir + CurDir + "/").Replace("//", "/"))); } }
    //导航路径面包屑
    public string GetBread()
    {
        string html = "";
        string vdir = CurDir;
        if (string.IsNullOrEmpty(vdir)) { return "全部文件"; }
        else
        {
            string url = "CSSManage?Dir=";
            string[] dirArr = vdir.Split("/".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
            html += "<a href='" + url + "'>全部文件</a>";
            for (int i = 0; i < dirArr.Length; i++)
            {
                //上一级目录链接
                url += dirArr[i] + "/";
                html += "<i class='fa fa-angle-right spanr'></i>";
                if (i == (dirArr.Length - 1)) { html += "<span>" + dirArr[i] + "</span>"; }
                else { html += "<a href='" + url + "'>" + dirArr[i] + "</a>"; }
                //设置返回上一级
                if (dirArr.Length == 1) { html = "<a href='CSSManage?Dir='>返回上一级</a> | " + html; }
                else if (i == (dirArr.Length - 2))
                {
                    html = "<a href='" + url + "'>返回上一级</a> | " + html;
                }
            }
        }
        return html;
    }
    public bool IsFolder(DataRow dr)
    {
        return DataConverter.CStr(dr["type"]) == "1" ? true : false;
    }

}
@{
    DataTable dt = FileSystemObject.GetDirectoryInfos(PPathDir, FsoMethod.All);
}
@section head{<title>风格样式</title>}
@section content{
    @Call.SetBread(new Bread[] {
new Bread("/{manage}/Main","工作台"),
new Bread("TemplateSet","模板风格"),
new Bread("CssManage","风格管理"),
new Bread() {url=Context.Request.RawUrl() , text="<a class='text-danger' href='CssEdit'>[新建风格]</a>",addon="" }}
            )
    <div class="container-fluid pr-0">
        <div class="row sysRow list_choice">
            <table class="table table-bordered">
                <tr>
                    <td>
                        @Html.Raw(GetBread())
                    </td>
                </tr>
            </table>
            <div class="panel panel-default w-100">
                <table class="table table-striped table-bordered table-hover" style="border-top: none;">
                    <tr class="gridtitle" align="center">
                        <td>操作</td>
                        <td>名称</td>
                        <td>类型</td>
                        <td>修改时间</td>
                    </tr>
                    @foreach (DataRow dr in dt.Rows)
                    {
                        <tr>
                            <td align="center">
                                <div class="option_area dropdown">
                                    <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-bars"></i>操作<span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    @if (!IsFolder(dr)){ <li class="dropdown-item"><a href="javascript:;" data-cmd="DownFiles"><i class="fa  fa-download"></i> 下载</a></li>}
                                    <li class="dropdown-item"><a onclick="return confirm('你确认要删除该文件夹或文件吗？')"> <i class="fa fa-trash-o"></i> 删除</a></li>
                                    @if (!IsFolder(dr)){<li class="dropdown-item"><a> <i class="fa fa-copy"></i> 复制</a></li>}
                                </ul>
                                </div>
                            </td>
                            <td align="left">
                               @dr["Name"]
                            </td>
                            <td align="center">
                                @(DataConverter.CStr(dr["type"])=="1"?"文件夹":dr["content_type"]+"文件")
                            </td>
                            <td align="center">@dr["lastWriteTime"]</td>
                        </tr>
                    }
                </table>
                @*<div class="panel panel-footer ml-2">
                    <div class="d-flex flex-wrap">
                        <asp:Button ID="btnCSSBackup" class="btn btn-outline-info" runat="server" Text="<%$Resources:L,备份当前风格 %>" OnClientClick="return confirm('是否创建备份？(提示：备份同名文件会覆盖！）');" OnClick="btnCSSBackup_Click" />
                        目录名称：
                        <asp:TextBox ID="txtForderName" class="form-control max20rem" runat="server"></asp:TextBox>
                        <asp:Button ID="btnCreateFolder" class="btn btn-outline-info" runat="server" Text="创建目录" OnClick="btnCreateFolder_Click" OnClientClick="return CreateFolderCheck();" />
                        <ZL:SFileUp ID="SFile_Up" runat="server" IsRelName="true" FType="All" />
                        <asp:Button ID="btnTemplateUpLoad" class="btn btn-outline-info" runat="server" Text="<%$Resources:L,上传风格 %>" OnClientClick="return confirm('即将覆盖同名风格，是否继续？');" OnClick="btnTemplateUpLoad_Click" />
                    </div>
                </div>*@
            </div>
            @*<div id="dHTMLADPreview" style="z-index: 1000; left: 0px; visibility: hidden; width: 10px; position: absolute; top: 0px; height: 10px"></div>
            <div class="clearbox"></div>*@
        </div>
    </div>
}
@section script{
    <script src="/js/Popup.js"></script>
    <script src="/js/ZL_Regex.js"></script>
    <script>
        function CreateFolderCheck() {
            var folder = $("#txtForderName").val();
            if (ZL_Regex.isEmpty(folder)) { alert("目录名称不能为空"); return false; }
            return true;
        }
    </script>
}